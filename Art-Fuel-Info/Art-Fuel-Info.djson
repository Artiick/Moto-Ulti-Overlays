{"Variables":{"DashboardVariables":[{"VariableName":"AvgFuel","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":false,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"//Artiick-Ver 1.5.7: AVG Fuel Calc\r\n\r\n// // Retrieve game properties\r\n// var completedLaps = $prop('CompletedLaps');\r\n// var fuelPercent = $prop('DataCorePlugin.Computed.Fuel_Percent');\r\n// var sessionOdo = $prop('DataCorePlugin.GameData.SessionOdo');\r\n// var raceTime = $prop('GameRawData.CurrentRaceTime');\r\n// var distanceTraveled = $prop('GameRawData.DistanceTraveled'); // Added for start detection\r\n\r\n// // Initialize global storage if needed\r\n// if (typeof globalThis.FuelTracker === 'undefined') {\r\n//     globalThis.FuelTracker = {\r\n//         lastFuel: null,        // Stores the last recorded valid fuel percentage\r\n//         fuelDifferences: [],   // Stores last 2 fuel consumption values\r\n//         lastLap: 0,            // Tracks last completed lap\r\n//         initialized: false     // Tracks if first valid fuel value is stored\r\n//     };\r\n// }\r\n\r\n// // Full reset when session restarts\r\n// if (sessionOdo < 0.1 && raceTime < 2) {\r\n//     globalThis.FuelTracker.lastFuel = null;\r\n//     globalThis.FuelTracker.fuelDifferences = [];\r\n//     globalThis.FuelTracker.lastLap = 0;\r\n//     globalThis.FuelTracker.initialized = false;\r\n//     return \"0.0\";\r\n// }\r\n\r\n// // Ignore invalid FuelPercent values (keep last valid one)\r\n// if (fuelPercent > 0) {\r\n//     globalThis.FuelTracker.lastValidFuel = fuelPercent;\r\n// } else {\r\n//     fuelPercent = globalThis.FuelTracker.lastValidFuel || 0;\r\n// }\r\n\r\n// // Store the first valid fuel value when DistanceTraveled goes positive\r\n// if (!globalThis.FuelTracker.initialized && fuelPercent > 0 && distanceTraveled > 0) {\r\n//     globalThis.FuelTracker.lastFuel = fuelPercent;\r\n//     globalThis.FuelTracker.initialized = true;\r\n// }\r\n\r\n// // Store fuel data when a lap is completed\r\n// if (completedLaps > globalThis.FuelTracker.lastLap) {\r\n//     if (globalThis.FuelTracker.lastFuel !== null && fuelPercent > 0) {\r\n//         var fuelDiff = globalThis.FuelTracker.lastFuel - fuelPercent;\r\n\r\n//         // Ignore refueling laps (fuelDiff should be positive)\r\n//         if (fuelDiff > 0) {\r\n//             globalThis.FuelTracker.fuelDifferences.unshift(fuelDiff);\r\n\r\n//             // Keep only last 2 values\r\n//             if (globalThis.FuelTracker.fuelDifferences.length > 2) {\r\n//                 globalThis.FuelTracker.fuelDifferences.pop();\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     // Update last stored fuel and lap number\r\n//     globalThis.FuelTracker.lastFuel = fuelPercent;\r\n//     globalThis.FuelTracker.lastLap = completedLaps;\r\n// }\r\n\r\n// // Return \"--\" if no laps have been completed yet\r\n// if (completedLaps === 0) {\r\n//     return \"0.000\";\r\n// }\r\n\r\n// // Calculate and return the average fuel consumption\r\n// if (globalThis.FuelTracker.fuelDifferences.length > 0) {\r\n//     var avgFuelConsumption = globalThis.FuelTracker.fuelDifferences.reduce((a, b) => a + b, 0) / globalThis.FuelTracker.fuelDifferences.length;\r\n//     return avgFuelConsumption.toFixed(3);\r\n// }\r\n\r\n// return \"0.000\";\r\n\r\n\r\n// Read raw fuel values\r\nvar fr0 = $prop(\"variable.fuelRawi0\") || 0;\r\nvar fr1 = $prop(\"variable.fuelRawi1\") || 0;\r\nvar fr2 = $prop(\"variable.fuelRawi2\") || 0;\r\nvar fr3 = $prop(\"variable.fuelRawi3\") || 0;\r\nvar fr4 = $prop(\"variable.fuelRawi4\") || 0;\r\n\r\n// Read completed laps\r\nvar laps = $prop(\"CompletedLaps\") || 0;\r\n\r\n// Store valid consumption values\r\nvar values = [];\r\n\r\n// Push positive diffs based on laps\r\nif (laps === 1) {\r\n    let d1 = fr0 - fr1;\r\n    if (d1 > 0) values.push(d1);\r\n} else if (laps === 2) {\r\n    let d1 = fr0 - fr1;\r\n    let d2 = fr1 - fr2;\r\n    if (d1 > 0) values.push(d1);\r\n    if (d2 > 0) values.push(d2);\r\n} else if (laps === 3) {\r\n    let d2 = fr1 - fr2;\r\n    let d3 = fr2 - fr3;\r\n    if (d2 > 0) values.push(d2);\r\n    if (d3 > 0) values.push(d3);\r\n} else if (laps >= 4) {\r\n    let d2 = fr1 - fr2;\r\n    let d3 = fr2 - fr3;\r\n    let d4 = fr3 - fr4;\r\n    if (d2 > 0) values.push(d2);\r\n    if (d3 > 0) values.push(d3);\r\n    if (d4 > 0) values.push(d4);\r\n}\r\n\r\n// Return average of valid values or \"0.00\"\r\nif (values.length === 0) {\r\n    return \"0.00\";\r\n} else {\r\n    var avg = values.reduce((sum, v) => sum + v, 0) / values.length;\r\n    return avg.toFixed(2);\r\n}"},"EvaluateBeforeScreenRoles":false},{"VariableName":"EstFuel","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":false,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"//Artiick-Ver 1.5.0: Estimated Fuel (in laps)\r\n\r\n// Read telemetry data\r\nvar avgFuelPerLap = $prop('variable.AvgFuel');\r\nvar currentFuelPercent = $prop('FuelPercent');\r\n\r\n// Check for valid values to avoid division by zero or invalid results\r\nif (avgFuelPerLap > 0.0000001 && currentFuelPercent >= 0) {\r\n    // Calculate estimated laps remaining\r\n    var lapsRemaining = currentFuelPercent / avgFuelPerLap;\r\n    return lapsRemaining;\r\n}\r\n\r\n// Default return if invalid (e.g., avgFuelPerLap is 0 or FuelPercent is negative)\r\nreturn 0;"},"EvaluateBeforeScreenRoles":false},{"VariableName":"avgFuelRaw","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":false,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"//Artiick-ver 1.5.6: Avg Fuel calc redone for the 23984729844398 time ffs\r\n\r\nif (typeof globalThis.fuelSnapshotData === 'undefined') {\r\n    globalThis.fuelSnapshotData = {\r\n        snapshots: ['0:0', '1:0', '2:0', '3:0', '4:0'], // Stores 0:<value>,1:<value>,2:<value>,3:<value>,4:<value>\r\n        lastCompletedLaps: -1, // Tracks previous CompletedLaps\r\n        hasDistanceStarted: false, // Tracks if DistanceTraveled > 0\r\n        lastCarId: null, // Tracks previous CarId\r\n        lastTrackId: null // Tracks previous TrackId\r\n    };\r\n}\r\n\r\n// Get current values\r\nvar completedLaps = $prop('CompletedLaps', 0);\r\nvar fuelPercent = $prop('FuelPercent', 0);\r\nvar distanceTraveled = $prop('GameRawData.DistanceTraveled', 0);\r\nvar carId = $prop('CarId', '');\r\nvar trackId = $prop('TrackId', '');\r\n\r\n// Check reset conditions\r\nvar shouldReset = (\r\n    distanceTraveled < 0 ||\r\n    completedLaps == 0 ||\r\n    (carId !== globalThis.fuelSnapshotData.lastCarId && globalThis.fuelSnapshotData.lastCarId !== null) ||\r\n    (trackId !== globalThis.fuelSnapshotData.lastTrackId && globalThis.fuelSnapshotData.lastTrackId !== null)\r\n);\r\n\r\n// Reset if any condition is true\r\nif (shouldReset) {\r\n    globalThis.fuelSnapshotData.snapshots = ['0:0', '1:0', '2:0', '3:0', '4:0'];\r\n    globalThis.fuelSnapshotData.lastCompletedLaps = -1;\r\n    globalThis.fuelSnapshotData.hasDistanceStarted = false;\r\n    globalThis.fuelSnapshotData.lastCarId = carId;\r\n    globalThis.fuelSnapshotData.lastTrackId = trackId;\r\n} else if (fuelPercent > 0) {\r\n    // Snapshot 0: When DistanceTraveled first becomes > 0\r\n    if (!globalThis.fuelSnapshotData.hasDistanceStarted && distanceTraveled > 0 && globalThis.fuelSnapshotData.snapshots[0] == '0:0') {\r\n        globalThis.fuelSnapshotData.snapshots[0] = '0:' + fuelPercent;\r\n        globalThis.fuelSnapshotData.hasDistanceStarted = true;\r\n    }\r\n    \r\n    // Snapshots 1, 2, 3, 4: When CompletedLaps changes\r\n    if (completedLaps > globalThis.fuelSnapshotData.lastCompletedLaps && completedLaps > 0) {\r\n        // Shift snapshots for laps > 4, preserving index labels\r\n        if (completedLaps > 4) {\r\n            globalThis.fuelSnapshotData.snapshots[0] = '0:' + globalThis.fuelSnapshotData.snapshots[1].split(':')[1];\r\n            globalThis.fuelSnapshotData.snapshots[1] = '1:' + globalThis.fuelSnapshotData.snapshots[2].split(':')[1];\r\n            globalThis.fuelSnapshotData.snapshots[2] = '2:' + globalThis.fuelSnapshotData.snapshots[3].split(':')[1];\r\n            globalThis.fuelSnapshotData.snapshots[3] = '3:' + globalThis.fuelSnapshotData.snapshots[4].split(':')[1];\r\n            globalThis.fuelSnapshotData.snapshots[4] = '4:' + fuelPercent;\r\n        } else {\r\n            // Store directly in the appropriate index (1, 2, 3, or 4)\r\n            var index = completedLaps; // Maps to 1, 2, 3, or 4\r\n            globalThis.fuelSnapshotData.snapshots[index] = index + ':' + fuelPercent;\r\n        }\r\n        globalThis.fuelSnapshotData.lastCompletedLaps = completedLaps;\r\n    }\r\n}\r\n\r\n// Update last CarId and TrackId for next iteration\r\nglobalThis.fuelSnapshotData.lastCarId = carId;\r\nglobalThis.fuelSnapshotData.lastTrackId = trackId;\r\n\r\n// Return snapshots as a string\r\nreturn globalThis.fuelSnapshotData.snapshots.join(',');"},"EvaluateBeforeScreenRoles":false},{"VariableName":"fuelRawi0","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":false,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"// Define the index to extract (0, 1, 2, 3, or 4)\r\nvar index = 0; // Change this to 0-4 depending on the desired index\r\n\r\n// Get the snapshot string from variable.avgFuelRaw\r\nvar snapshotString = $prop('variable.avgFuelRaw');\r\n\r\n// Split into individual entries (e.g., ['0:75.5', '1:60.2', '2:45.8', '3:30.1', '4:20.5'])\r\nvar snapshotEntries = snapshotString.split(',');\r\n\r\n// Initialize default output\r\nvar fuelValue = 0; // Default fallback\r\n\r\n// Find the entry for the specified index\r\nfor (var i = 0; i < snapshotEntries.length; i++) {\r\n    // Split on ':' to separate index and value (e.g., ['0', '75.5'])\r\n    var entryParts = snapshotEntries[i].split(':');\r\n    if (entryParts.length == 2 && parseInt(entryParts[0]) === index) {\r\n        fuelValue = parseFloat(entryParts[1]) || 0; // Extract value, default to 0 if invalid\r\n        break;\r\n    }\r\n}\r\n\r\n// Return the fuel value\r\nreturn fuelValue;"},"EvaluateBeforeScreenRoles":false},{"VariableName":"fuelRawi1","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":false,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"// Define the index to extract (0, 1, 2, 3, or 4)\r\nvar index = 1; // Change this to 0-4 depending on the desired index\r\n\r\n// Get the snapshot string from variable.avgFuelRaw\r\nvar snapshotString = $prop('variable.avgFuelRaw');\r\n\r\n// Split into individual entries (e.g., ['0:75.5', '1:60.2', '2:45.8', '3:30.1', '4:20.5'])\r\nvar snapshotEntries = snapshotString.split(',');\r\n\r\n// Initialize default output\r\nvar fuelValue = 0; // Default fallback\r\n\r\n// Find the entry for the specified index\r\nfor (var i = 0; i < snapshotEntries.length; i++) {\r\n    // Split on ':' to separate index and value (e.g., ['0', '75.5'])\r\n    var entryParts = snapshotEntries[i].split(':');\r\n    if (entryParts.length == 2 && parseInt(entryParts[0]) === index) {\r\n        fuelValue = parseFloat(entryParts[1]) || 0; // Extract value, default to 0 if invalid\r\n        break;\r\n    }\r\n}\r\n\r\n// Return the fuel value\r\nreturn fuelValue;"},"EvaluateBeforeScreenRoles":false},{"VariableName":"fuelRawi2","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":false,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"// Define the index to extract (0, 1, 2, 3, or 4)\r\nvar index = 2; // Change this to 0-4 depending on the desired index\r\n\r\n// Get the snapshot string from variable.avgFuelRaw\r\nvar snapshotString = $prop('variable.avgFuelRaw');\r\n\r\n// Split into individual entries (e.g., ['0:75.5', '1:60.2', '2:45.8', '3:30.1', '4:20.5'])\r\nvar snapshotEntries = snapshotString.split(',');\r\n\r\n// Initialize default output\r\nvar fuelValue = 0; // Default fallback\r\n\r\n// Find the entry for the specified index\r\nfor (var i = 0; i < snapshotEntries.length; i++) {\r\n    // Split on ':' to separate index and value (e.g., ['0', '75.5'])\r\n    var entryParts = snapshotEntries[i].split(':');\r\n    if (entryParts.length == 2 && parseInt(entryParts[0]) === index) {\r\n        fuelValue = parseFloat(entryParts[1]) || 0; // Extract value, default to 0 if invalid\r\n        break;\r\n    }\r\n}\r\n\r\n// Return the fuel value\r\nreturn fuelValue;"},"EvaluateBeforeScreenRoles":false},{"VariableName":"fuelRawi3","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":false,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"// Define the index to extract (0, 1, 2, 3, or 4)\r\nvar index = 3; // Change this to 0-4 depending on the desired index\r\n\r\n// Get the snapshot string from variable.avgFuelRaw\r\nvar snapshotString = $prop('variable.avgFuelRaw');\r\n\r\n// Split into individual entries (e.g., ['0:75.5', '1:60.2', '2:45.8', '3:30.1', '4:20.5'])\r\nvar snapshotEntries = snapshotString.split(',');\r\n\r\n// Initialize default output\r\nvar fuelValue = 0; // Default fallback\r\n\r\n// Find the entry for the specified index\r\nfor (var i = 0; i < snapshotEntries.length; i++) {\r\n    // Split on ':' to separate index and value (e.g., ['0', '75.5'])\r\n    var entryParts = snapshotEntries[i].split(':');\r\n    if (entryParts.length == 2 && parseInt(entryParts[0]) === index) {\r\n        fuelValue = parseFloat(entryParts[1]) || 0; // Extract value, default to 0 if invalid\r\n        break;\r\n    }\r\n}\r\n\r\n// Return the fuel value\r\nreturn fuelValue;"},"EvaluateBeforeScreenRoles":false},{"VariableName":"fuelRawi4","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":false,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"// Define the index to extract (0, 1, 2, 3, or 4)\r\nvar index = 4; // Change this to 0-4 depending on the desired index\r\n\r\n// Get the snapshot string from variable.avgFuelRaw\r\nvar snapshotString = $prop('variable.avgFuelRaw');\r\n\r\n// Split into individual entries (e.g., ['0:75.5', '1:60.2', '2:45.8', '3:30.1', '4:20.5'])\r\nvar snapshotEntries = snapshotString.split(',');\r\n\r\n// Initialize default output\r\nvar fuelValue = 0; // Default fallback\r\n\r\n// Find the entry for the specified index\r\nfor (var i = 0; i < snapshotEntries.length; i++) {\r\n    // Split on ':' to separate index and value (e.g., ['0', '75.5'])\r\n    var entryParts = snapshotEntries[i].split(':');\r\n    if (entryParts.length == 2 && parseInt(entryParts[0]) === index) {\r\n        fuelValue = parseFloat(entryParts[1]) || 0; // Extract value, default to 0 if invalid\r\n        break;\r\n    }\r\n}\r\n\r\n// Return the fuel value\r\nreturn fuelValue;"},"EvaluateBeforeScreenRoles":false}]},"DashboardDebugManager":{},"Version":2,"Id":"3b572928-77f5-4f1f-be7c-8060289156a7","BaseHeight":217,"BaseWidth":115,"BackgroundColor":"#FF000000","Screens":[{"RenderingSkip":0,"Name":"Screen","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"8ac7d498-e1f0-4275-85cb-7726aa3fed83","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#00FFFFFF","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.ImageItem, SimHub.Plugins","AutoSize":false,"BackgroundColor":"#00FFFFFF","Height":217.0,"Left":-1.5,"Top":0.0,"Visible":true,"Width":110.0,"IsFreezed":true,"Name":"Align","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Top":{"Formula":{"JSExt":0,"Interpreter":1,"Expression":"setsharedvalue(\"artiick\", \"lapsEstFuelLeft\", $prop(\"variable.EstFuel\"))"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.ImageItem, SimHub.Plugins","Image":"Fuel-Icon","AutoSize":false,"BackgroundColor":"#00FFFFFF","Height":50.0,"Left":25.6,"Top":162.7,"Visible":true,"Width":45.0,"IsFreezed":true,"Name":"FuelIco","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":20.0,"Text":"EST","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":29.0,"Left":24.5,"Top":-3.1,"Visible":true,"Width":45.0,"Name":"Est","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":20.0,"Text":".","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":21.6,"Left":46.4,"Top":-3.1,"Visible":true,"Width":6.6000000000000014,"Name":"Est2","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":10.0,"Text":"LAPS","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":10.0,"Left":52.3,"Top":4.8,"Visible":true,"Width":20.0,"Name":"[Laps]","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":10.0,"Text":"[","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":13.0,"Left":50.3,"Top":4.5,"Visible":true,"Width":20.0,"Name":"[Laps]2","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":10.0,"Text":"]","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":21.0,"Left":68.6,"Top":4.5,"Visible":true,"Width":21.400000000000006,"Name":"[Laps]3","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0}],"Visible":true,"Name":"Est-label","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont FuelTire-Num-R","FontSize":35.0,"Text":"44.4","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"UseMonospacedText":true,"CharWidth":15.0,"SpecialCharsWidth":5.5,"BackgroundColor":"#00FFFFFF","Height":36.6,"Left":24.0,"Top":13.0,"Visible":true,"Width":64.5,"Name":"EST-Num","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"Expression":"format([variable.EstFuel], '0.00')"},"Mode":2},"Visible":{"Formula":{"Expression":"[CompletedLaps] > 0"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont FuelTire-Num-R","FontSize":35.0,"Text":"l","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"CharWidth":15.0,"SpecialCharsWidth":5.0,"BackgroundColor":"#00FFFFFF","Height":36.6,"Left":74.2,"Top":13.0,"Visible":true,"Width":14.5,"Name":"EST-L","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Left":{"Formula":{"Expression":"abs(format([variable.EstFuel], '0.00')) < 9.995 ? '74.2' : '89'"},"Mode":2},"Visible":{"Formula":{"Expression":"[CompletedLaps] > 0"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont FuelTire-Num-R","FontSize":35.0,"Text":"--.--","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"UseMonospacedText":true,"CharWidth":15.0,"SpecialCharsWidth":5.5,"BackgroundColor":"#00FFFFFF","Height":36.6,"Left":24.0,"Top":13.0,"Visible":true,"Width":64.5,"Name":"EST-dashes","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Visible":{"Formula":{"Expression":"[CompletedLaps] = 0"},"Mode":2}}}],"Visible":true,"Name":"Est","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":20.0,"Text":"AVG","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":29.0,"Left":25.0,"Top":50.7,"Visible":true,"Width":45.0,"Name":"avg","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":20.0,"Text":".","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":21.6,"Left":48.4,"Top":50.7,"Visible":true,"Width":6.6000000000000014,"Name":"avg2","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":10.0,"Text":"x LAP","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":10.0,"Left":54.3,"Top":58.6,"Visible":true,"Width":20.0,"Name":"xlap","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":10.0,"Text":"[","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":13.0,"Left":52.3,"Top":58.2,"Visible":true,"Width":5.0,"Name":"xlap2","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":10.0,"Text":"]","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":21.0,"Left":72.4,"Top":58.2,"Visible":true,"Width":21.400000000000006,"Name":"xlap3","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0}],"Visible":true,"Name":"AVG-label","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont FuelTire-Num-R","FontSize":35.0,"Text":"44.4%","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"UseMonospacedText":true,"CharWidth":15.0,"SpecialCharsWidth":5.0,"BackgroundColor":"#00FFFFFF","Height":35.7,"Left":24.0,"Top":67.3,"Visible":true,"Width":73.0,"Name":"AVG-Num","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"Expression":"format(abs([variable.AvgFuel]), '0.00')"},"Mode":2},"Visible":{"Formula":{"Expression":"[CompletedLaps] > 0"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont FuelTire-Num-R","FontSize":35.0,"Text":"%","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"CharWidth":15.0,"SpecialCharsWidth":5.0,"BackgroundColor":"#00FFFFFF","Height":35.7,"Left":74.0,"Top":67.3,"Visible":true,"Width":25.0,"Name":"AVG-%","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Left":{"Formula":{"Expression":"abs(format([variable.AvgFuel], '0.0')) < 10 ? '74' : '88.5'"},"Mode":2},"Visible":{"Formula":{"Expression":"[CompletedLaps] > 0"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont FuelTire-Num-R","FontSize":35.0,"Text":"--.--","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"UseMonospacedText":true,"CharWidth":15.0,"SpecialCharsWidth":5.0,"BackgroundColor":"#00FFFFFF","Height":35.7,"Left":24.0,"Top":67.3,"Visible":true,"Width":73.0,"Name":"AVG-dashes","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Visible":{"Formula":{"Expression":"[CompletedLaps] = 0"},"Mode":2}}}],"Visible":true,"Name":"AVG","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont Text","FontSize":20.0,"Text":"FUEL","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"BackgroundColor":"#00FFFFFF","Height":29.0,"Left":24.5,"Top":104.8,"Visible":true,"Width":45.0,"Name":"Fuel","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont FuelTire-Num-R","FontSize":35.0,"Text":"44.44","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"UseMonospacedText":true,"CharWidth":15.0,"SpecialCharsWidth":5.0,"BackgroundColor":"#00FFFFFF","Height":35.7,"Left":24.0,"Top":121.5,"Visible":true,"Width":73.0,"Name":"Fuel-Num","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"0.0","Formula":{"Expression":"if([FuelPercent] > 99.95, \r\n\tformat([FuelPercent], '0.0'),\r\n\tformat([FuelPercent], '0.00')\r\n)"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowDepth":2,"ShadowColor":"#A1000000","Font":"ForzaFont FuelTire-Num-R","FontSize":35.0,"Text":"%","TextColor":"#FFBFBFBF","HorizontalAlignment":0,"VerticalAlignment":0,"CharWidth":15.0,"SpecialCharsWidth":5.0,"BackgroundColor":"#00FFFFFF","Height":35.7,"Left":74.0,"Top":121.5,"Visible":true,"Width":25.0,"Name":"Fuel-%","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Left":{"Formula":{"Expression":"if(\r\n[FuelPercent] > 99.95, '88.5',\r\n[FuelPercent] < 9.995 ? '74' : '88.5'\r\n)"},"Mode":2}}}],"Visible":true,"Name":"Fuel","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.RectangleItem, SimHub.Plugins","IsRectangleItem":true,"BackgroundColor":"#FF000000","BorderStyle":{"BorderColor":"#FF16161A","RadiusTopLeft":2,"RadiusTopRight":2,"RadiusBottomLeft":2,"RadiusBottomRight":2},"Height":217.0,"Left":0.0,"Opacity":35.0,"Top":0.0,"Visible":true,"Width":17.0,"Name":"Fuel BG","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.RectangleItem, SimHub.Plugins","IsRectangleItem":true,"BackgroundColor":"#FFFFFFFF","BorderStyle":{"BorderColor":"#FF16161A"},"Height":213.0,"Left":2.0,"Top":2.0,"Visible":true,"Width":13.0,"Name":"Fuel Bar","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"BackgroundColor":{"Formula":{"Expression":"format([FuelPercent],'0.00')"},"StartColor":"#FFFF0033","EnableMiddleColor":true,"MiddleColor":"#FFFFFF00","MiddleColorValue":20.0,"EndColor":"#FFFFFFFF","StartColorValue":5.0,"EndColorValue":20.01,"Mode":4},"Height":{"Formula":{"Expression":"format(213 * ([FuelPercent] / 100), '0.0')"},"Mode":2},"Top":{"Formula":{"Expression":"format(215 - (213 * ([FuelPercent] / 100)), '0.0')"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.RectangleItem, SimHub.Plugins","IsRectangleItem":true,"BackgroundColor":"#00FFFFFF","BorderStyle":{"BorderColor":"#FF16161A","BorderTop":2,"BorderBottom":2,"BorderLeft":2,"BorderRight":2,"RadiusTopLeft":2,"RadiusTopRight":2,"RadiusBottomLeft":2,"RadiusBottomRight":2},"Height":217.0,"Left":0.0,"Top":0.0,"Visible":true,"Width":17.0,"Name":"Fuel border","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.ImageItem, SimHub.Plugins","Image":"Fuel-markers","AutoSize":false,"BackgroundColor":"#00FFFFFF","Height":2.0,"Left":3.0,"Top":161.7,"Visible":true,"Width":11.0,"Name":"Marker25%","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.ImageItem, SimHub.Plugins","Image":"Fuel-markers","AutoSize":false,"BackgroundColor":"#00FFFFFF","Height":2.0,"Left":3.0,"Top":107.5,"Visible":true,"Width":11.0,"Name":"Marker50%","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.ImageItem, SimHub.Plugins","Image":"Fuel-markers","AutoSize":false,"BackgroundColor":"#00FFFFFF","Height":2.0,"Left":3.0,"Top":53.2,"Visible":true,"Width":11.0,"Name":"Marker75%","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0}],"Visible":true,"Name":"Fuel Bar","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0}],"Visible":true,"Name":"Fuel Info","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Visible":{"Formula":{"Expression":"timespantoseconds([CurrentLapTime])>0"},"Mode":2}}}],"MinimumRefreshIntervalMS":0.0}],"SnapToGrid":false,"HideLabels":true,"ShowForeground":true,"ForegroundOpacity":100.0,"ShowBackground":true,"BackgroundOpacity":100.0,"ShowBoundingRectangles":false,"GridSize":10,"Images":[{"Name":"Fuel-Icon","Extension":".png","Modified":false,"Optimized":true,"Width":72,"Height":80,"Length":4298,"MD5":"86b5917614e3ff6ee05b0e0a261ffb6b"},{"Name":"Fuel-markers","Extension":".png","Modified":false,"Optimized":true,"Width":70,"Height":12,"Length":843,"MD5":"a7387f2ea892c6d85befbea292dc7ba9"}],"Metadata":{"ScreenCount":1.0,"InGameScreensIndexs":[0],"IdleScreensIndexs":[0],"MainPreviewIndex":0,"IsOverlay":true,"OverlaySizeWarning":false,"MetadataVersion":2.0,"EnableOnDashboardMessaging":true,"PitScreensIndexs":[],"SimHubVersion":"9.8.1","Title":"Art-Fuel-Info","Author":"Artiick","Width":115.0,"Height":217.0,"DashboardVersion":""},"ShowOnScreenControls":true,"IsOverlay":true,"EnableClickThroughOverlay":true,"EnableOnDashboardMessaging":true,"UseStrictJSIsolation":false,"UseStrictJSIsolationWarning":true}